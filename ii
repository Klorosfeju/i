l3.1 Az UTF-8 kódolású legmagasabb.txt állomány Európa legmagasabb épületeinek
adatait tartalmazza a következő minta szerint (forrás: wikipedia.org):
név;város;ország;magasság;emelet;épült
Avaz Twist Tower;Szarajevó;Bosznia-Hercegovina;172;40;2007
Avenue, 77 block 1;Moszkva;Oroszország;155;43;2008
Broadgate Tower;London;Anglia;164,3;35;2007
Centrum LIM;Varsó;Lengyelország;140;43;1989
Az épület nevét, városát és országát az épület magassága (m, valós szám), az emeletek száma
és az épület építésének éve követi. Az adatokat pontosvessző választja el. Olvassa be a
legmagasabb.txt állományban lévő adatokat és tárolja el egy saját osztály (Épület)
típusú listában! Ügyeljen rá, hogy az állomány első sora az adatok fejlécét tartalmazza!
3.2 Határozza meg és írja ki a képernyőre a minta szerint, hogy hány épület található az
állományban!
3.3 Határozza meg és írja ki a képernyőre a minta szerint az állományba található épületek
emeleteinek összegét!
3.4 Határozza meg és írja ki a képernyőre a minta szerint a legmagasabb épület adatait!
Feltételezheti, hogy nem alakult ki holtverseny.
3.5 Döntse el, hogy az adatok között található-e olasz épület! A keresését ne folytassa, ha a
választ meg tudja adni! A képernyőre írást a minta szerint végezze!
ezzel adunk neveket másik állományben
class Épület:
    def __init__(self, név, város, ország, magasság, emelet, épült):
        self.név = név
        self.város = város
        self.ország = ország
        self.magasság = float(magasság)
        self.emelet = int(emelet)
        self.épült = int(épült)

    def __str__(self):
        return f"{self.név}, {self.város}, {self.ország}, {self.magasság} m, {self.emelet} emelet, épült: {self.épült}"

def beolvasas(file_nev):
    épületek = []
    with open(file_nev, "r", encoding="utf-8") as file:
        fejléc = file.readline().strip().split(';')
        for line in file:
            data = line.strip().split(';')
            épület = Épület(*data)
            épületek.append(épület)
    return épületek

def epuletek_szama(épületek):
    return len(épületek)

def emeletek_osszege(épületek):
    return sum(épület.emelet for épület in épületek)

def legmagasabb_epulet(épületek):
    return max(épületek, key=lambda x: x.magasság)

def van_olasz_epulet(épületek):
    return any(épület.ország.lower() == "olaszország" for épület in épületek)


from epulet import beolvasas, epuletek_szama, emeletek_osszege, legmagasabb_epulet, van_olasz_epulet

# Adatok beolvasása
épületek = beolvasas("legmagasabb.txt")

# 3.2 feladat: Az állományban lévő épületek számának kiírása
print(f"3.2 Feladat: Az állományban lévő épületek száma: {epuletek_szama(épületek)}")

# 3.3 feladat: Az állományban lévő épületek emeleteinek összegzése és kiírása
print(f"3.3 Feladat: Az állományban lévő épületek emeleteinek összege: {emeletek_osszege(épületek)}")

# 3.4 feladat: A legmagasabb épület adatainak meghatározása és kiírása
legmagasabb = legmagasabb_epulet(épületek)
print(f"3.4 Feladat: A legmagasabb épület adatai:\n{legmagasabb}")

# 3.5 feladat: Az olasz épület létezésének eldöntése és kiírása
olasz = van_olasz_epulet(épületek)
print(f"3.5 Feladat: Az állományban {'található' if olasz else 'nincs'} olasz épület.")
